/*19)	Realiza las siguientes rutinas para el manejo de cadenas:
	1.- Insertar una subcadena (SUB) en una cadena (CAD) a partir de cierta posición (POS).
	2.- Encontrar una subcadena (SUB) en una cadena (CAD), indicando la posición donde inicia (POS).
	3.- Borrar una cierta cantidad de caracteres (N) de una cadena (CAD) a partir de una posición (POS).
	4-Copiar de una cadena (CAD) una cierta cantidad de caracteres (N) a una subcadena (SUB).
* Las cadenas terminan con el ASCII 0.
* La cadena CAD inicia en la localidad 400H de RAM.
* La cadena SUB inicia en la localidad 450H de RAM
* El número POS está en el registro R2.
* El número N está en el registro R3. */

	EOF EQU 30H	;ASCII EN 0
	N EQU 35H
	POS EQU 36H
	PCAD_L EQU 37H ;APUNTADOR A CAD
	PCAD_H EQU 38H
	PSUB_L EQU 39H ;APUNTADOR A SUB
	PSUB_H EQU 3AH
	PTEMP_L EQU 3BH ; APUNTADOR TEMPORAL PARA REALIZAR OPERACIONES
	PTEMP_H EQU 3CH
	LEN EQU 3DH
	TEMP EQU 3EH
	ORG 0000H
		SJMP INIT
	ORG 0040H
INIT:
	MOV N, R3
	MOV POS, R2
	MOV PCAD_H, #04H
	MOV PCAD_L, #00H
	MOV PSUB_H, #04H
	MOV PSUB_L, #50H
MAIN:
	;PROGRAMA EJEMPLO PARA BORRAR 2 ELEMENTOS DESDE LA POSICION 1 DE CAD
	;MOV POS, #01H
	;MOV N, #02H	
	;ACALL DELETENCHAR
	
	;PROGRAMA EJEMPLO PARA INSERTAR SUB EN CAD EN LA DESDE LA POSICION 1
	;MOV POS, #01H 
	;ACALL INSERTSUB ;
	
	;ACALL COPYCADN
	
	ACALL FINDSUBSTR
	SJMP $
	
TRAVERSESTRING: ;HELPER: TRAVERSE CAD UNTIL POS OR FULLY
	PUSH POS
	MOV LEN, #0H
	MOV DPH, PTEMP_H 
	MOV DPL, PTEMP_L
	TRAVEOF:
		MOVX A, @DPTR
		CJNE A, #EOF, TRAVCOND
		SJMP ENDTRAV
	TRAVCOND:
		CJNE R1, #00H, MOVEPOINTER ; THIS IS TO DO A FULL TRAVERSAL OVER THE STRING
		MOV R0, POS
		CJNE R0, #0H, MOVEPOINTER
	ENDTRAV:
		MOV PTEMP_H, DPH
		MOV PTEMP_L, DPL
		POP POS
	RET
	MOVEPOINTER:
		INC DPTR
		INC LEN
		DEC POS
		SJMP TRAVEOF


SHIFTSEG: ;HELPER
	MOV DPH, PTEMP_H
	MOV DPL, PTEMP_L
	MOVX A, @DPTR
	INC DPTR
	MOV PTEMP_H, DPH
	MOV PTEMP_L, DPL
	MOV DPH, PCAD_H
	MOV DPL, PCAD_L
	MOVX @DPTR, A
	INC DPTR
	MOV PCAD_H, DPH
	MOV PCAD_L, DPL
	CJNE A, #EOF, SHIFTSEG	
	RET 	
	SHIFTSEGRIGHT: ; HELPER
		MOV R1, #1H ;TO DO FULL TRAVERSAL
		MOV PTEMP_H, PCAD_H ;PTEMP NOS PERMITE HACER UN TRAVERSAL A CAD
		MOV PTEMP_L, PCAD_L
	
		ACALL TRAVERSESTRING
		MOV PCAD_H, PTEMP_H
		MOV PCAD_L, PTEMP_L
		MOV DPH, PTEMP_H
		MOV DPL, PTEMP_L
	INCDPTR:
		INC DPTR
		DJNZ R7, INCDPTR
		MOV A, POS
		ADD A, B
		MOV R7, A
		MOV PTEMP_H, DPH
		MOV PTEMP_L, DPL
	SHIFTLOOP:
		MOV DPH, PCAD_H
		MOV DPL, PCAD_L
		MOVX A, @DPTR
		ACALL DECPTR
		MOV PCAD_H, DPH
		MOV PCAD_L, DPL
		MOV DPH, PTEMP_H
		MOV DPL, PTEMP_L
		MOVX @DPTR, A
		ACALL DECPTR
		MOV PTEMP_H, DPH
		MOV PTEMP_L, DPL
		DJNZ R7, SHIFTLOOP		
	RET 
		
DECPTR:
	DEC DPL
	MOV R4, DPL
	CJNE R4, #0FFH, ENDEC
	DEC DPH
	ENDEC:	
	RET
		
;MAIN PROCEDURES;

INSERTSUB:
	PUSH PCAD_L
	PUSH PCAD_H
	PUSH PSUB_L
	PUSH PSUB_H
	MOV R1, #1H ;TO DO FULL TRAVERSAL
	MOV PTEMP_H, PSUB_H ;PTEMP NOS PERMITE HACER UN TRAVERSAL A SUB
	MOV PTEMP_L, PSUB_L
	ACALL TRAVERSESTRING ;TRAVERSAL HASTA FIN
	
	MOV R7, LEN
	MOV B, LEN
	CJNE R7, #00, INSCONT
	SJMP ENDINS
	INSCONT:
		ACALL SHIFTSEGRIGHT
		MOV A, B
		MOV R7, A
		MOV PTEMP_H, #04H
		MOV PTEMP_L, #00H
		MOV R1, #00H
		ACALL TRAVERSESTRING ;TRAVERSAL HASTA POS
		MOV DPH, PTEMP_H
		MOV DPL, PTEMP_L
		INC DPTR
		MOV PTEMP_H, DPH
		MOV PTEMP_L, DPL
	CPY:
		MOV DPH, PSUB_H
		MOV DPL, PSUB_L
		MOVX A, @DPTR
		INC DPTR 
		MOV PSUB_H, DPH
		MOV PSUB_L, DPL
		MOV DPH, PTEMP_H
		MOV DPL, PTEMP_L
		MOVX @DPTR, A
		INC DPTR
		MOV PTEMP_H, DPH
		MOV PTEMP_L, DPL
		DJNZ R7, CPY
	ENDINS:
		POP PSUB_L
		POP PSUB_L
		POP PCAD_H
		POP PCAD_L
	RET 
	
FINDSUBSTR:
	PUSH PCAD_L
	PUSH PCAD_H	
	MOV POS, #0H

	STRTFZ:	
	MOV PSUB_H, #04H 
	MOV PSUB_L, #50H
	
	MOV PTEMP_H, PCAD_H
	MOV PTEMP_L, PCAD_L
	
	CHECKSUB:
	MOV DPH, PSUB_H
	MOV DPL, PSUB_L
	MOVX A, @DPTR
	INC DPTR
	MOV PSUB_H, DPH
	MOV PSUB_L, DPL
	
	MOV R7, A
	MOV TEMP, A
	
	MOV DPH, PTEMP_H
	MOV DPL, PTEMP_L
	MOVX A, @DPTR
	MOV R6, A
	INC DPTR
	MOV PTEMP_H, DPH
	MOV PTEMP_L, DPL
	CJNE R7, #EOF, SCNDCHK
	SJMP MATCH
	SCNDCHK:
	CJNE R6, #EOF, CHKCONT
	SJMP FAILURE
	CHKCONT:
	CJNE A, TEMP, RESTART
	SJMP CHECKSUB
	
	RESTART:
	INC POS
	MOV DPH, PCAD_H
	MOV DPL, PCAD_L
	INC DPTR
	MOV PCAD_H, DPH
	MOV PCAD_L, DPL
	SJMP STRTFZ
	
	FAILURE:
	MOV POS, #0FFH
	MATCH:
	MOV A, POS
	POP PCAD_H
	POP PCAD_L
	RET


DELETENCHAR: ;Terminado
	PUSH PCAD_L
	PUSH PCAD_H
	PUSH POS
	MOV PTEMP_H, PCAD_H ;PTEMP NOS PERMITE HACER UN TRAVERSAL
	MOV PTEMP_L, PCAD_L
	MOV R1, #0H ;TO LIMIT TRAVERSAL
	ACALL TRAVERSESTRING ;TRAVERSAL HASTA POS
	MOV PCAD_H, PTEMP_H
	MOV PCAD_L, PTEMP_L
	MOV POS, N
	MOV R1, #0H ;TO LIMIT TRAVERSAL
	ACALL TRAVERSESTRING ;TRAVERSAL DE POS A POS+N
	ACALL SHIFTSEG
	POP POS
	POP PCAD_H
	POP PCAD_L
	RET

COPYCADN:
	PUSH PCAD_L
	PUSH PCAD_H
	PUSH PSUB_L
	PUSH PSUB_H
	COPYREG:
		MOV DPH, PCAD_H
		MOV DPL, PCAD_L
		MOVX A, @DPTR
		INC DPTR 
		MOV PCAD_H, DPH
		MOV PCAD_L, DPL
	
		MOV DPH, PSUB_H
		MOV DPL, PSUB_L
		MOVX @DPTR, A
		INC DPTR
		MOV PSUB_H, DPH
		MOV PSUB_L, DPL
		MOV R7, A
		CJNE R7, #EOF, COPYREG
	
		POP PSUB_H
		POP PSUB_L
		POP PCAD_H
		POP PCAD_L
		RET
END